var ldf = { mainselector: "#ldf", notfound: "<div>Page not Found</div>", waitselector: "link[rel='stylesheet'],:not(script)[src]", pagedir: "pages", baseurl: "", begin: void 0, end: void 0, hash: !0, nav: function (e) { e.startsWith("javascript:") || (ldf.hash && !e.startsWith("#") && "#/" == (e = "#" + e) && (e = "#"), ldf.hash || "" != e || (e = "/"), history.pushState(null, "", ldf.baseurl + e), ldf.locchange()) }, locchange: function () { var e = ldf.hash ? document.location.hash : document.location.pathname; "/" != (e = (e = (e = e.replace(ldf.baseurl, "")).replace("#", "/")).split("?")[0]) && "" != e || (e = "/index"), ldf.begin && ldf.begin(), ldf.load(ldf.mainselector, e) }, load: function (e, t) { if (t.startsWith("/") || (t = "/" + t), t = ldf.pagedir + t + t + ".html", ldf.hash) { var n = document.location.hash.split("?")[1] || ""; t += n ? "?" + n : "" } else t += document.location.search || ""; ldf.helpers.request(t, function (t, n) { t || null == ldf.notfound ? ldf.change(e, n) : ldf.change(e, ldf.notfound) }) }, change: function (e, t) { var n = document.querySelector(e), l = n.cloneNode(), a = !1; l.innerHTML = t, l.style.display = "none", n.parentElement.insertBefore(l, n), ldf.helpers.waitForLoad(l.querySelectorAll(ldf.waitselector), function () { a || (a = !0, n.remove(), l.style.display = "", ldf.end && ldf.end()) }), ldf.updatePageLinks(), ldf.loadScripts(l) }, updatePageLinks: function () { document.querySelectorAll("a").forEach(function (e) { var t = e.className, n = e.href; t.includes("ldfignore") || (t.includes("ldfinclude") || n && (n.includes(location.href.split("#")[0]) || "/" == n) && !n.split("/").pop().match(/\.(?!html)/)) && (e.removeEventListener("click", ldf.helpers.listener), e.addEventListener("click", ldf.helpers.listener)) }) }, loadScripts: function (e) { e.querySelectorAll("script").forEach(function (e) { var t = e.getAttribute("src"), n = e.parentNode; n.removeChild(e); var l = document.createElement("script"); l.setAttribute("src", t), n.appendChild(l) }) }, helpers: { waitForLoad: function (e, t) { if (e.length > 0) { var n = 0, l = function () { ++n == e.length && t() }; e.forEach(function (e) { e.onload = l, e.onerror = l }) } else t() }, listener: function (e) { e.preventDefault(), ldf.nav(e.target.getAttribute("href")) }, request: function (e, t) { var n = new XMLHttpRequest; n.open("GET", e), n.send(), n.onreadystatechange = function () { 4 === n.readyState && t(n.status.toString().startsWith("2"), n.response) } } } }; onpopstate = ldf.locchange, onload = ldf.locchange;